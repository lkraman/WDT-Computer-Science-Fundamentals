/*
1)What is a hash table?

A hash table is a data structure used to store large amounts of data in which the data can be retrieved by uniquely assigned keys.

2)What is hashing?

Hashing is used to convert string keys into numerical indices or, hash code, with the use of a hash function. Every key/value pair has a hash code.

3)How does a hash table store data?

Since hash codes are lengthy, modding is used to create a length that is less than the size of the array.

4)How are hash tables and objects different?

Hash tables are data structures meant to hold large amounts of similar data. The data is grouped together by type. For instance, customer information would be held separately from inventory. Objects hold smaller amounts of data and don't need to be similar in nature. For example, I could create an object containing my favorite TV shows this season and snack foods I eat while watching TV.

5)Determine whether you would use a hash table or an object to store each of the following pieces of data:
A list of pets and their unique names.
-Hash Table
The name, age, and the birthday of your best friend.
-Object
The name and location of every company in a given city.
-Hash Table
All of the books checked out from a library by a particular individual.
-The information I receive from the librarian is probably coming from a hash table. But, if I created this example for one individual, I'd probably create an object. On the other hand, if the person is an avid reader, I might create a hash table. Do they read 10 books a month and they're 85 years old? I'd create a hash table for that circumstance.
The primary and secondary phone numbers for a contact.
-For one contact, I'd create an object.

// */



var hash = (key, storage) => {
  var hashCode = 0;
  for (var i = 0; i < key.length; i++) {
    hashCode += key.charCodeAt(i);
  }
  return hashCode % storage;
};

let HashTable = function (){

  let storage = [];
  let storageLimit = 31;

  this.set = function(customer){

    let key = (customer.number)
    let index = hash(key, storageLimit);
    if(storage[index] === undefined){
      storage[index] = customer;
    } else {
      while(storage[index] !== undefined){
        index++;
      }
      storage[index] = customer;
    }
  };

  this.get = function(customerObj){
    let index = hash(customerObj, storageLimit);
    return storage[index];
  };

};

let ht = new HashTable();

var Customer1 = {
  name: 'Julie',
  address: '1 Bark lane, Doggie City, De 19808',
  number: '111-1111'
};
var Customer2 = {
  name: 'Frank',
  address: '1212 N Beans lane, Magical Fruit, Ga 22222',
  number: '555-5555'
};


ht.set(Customer1);
ht.set(Customer2);



ht.set(Customer2);
ht.set(Customer1);
console.log(ht.get('555-5555'));
console.log(ht.get('111-1111'));


_________________________________________________________________________________________


var hash = (key, storage) => {
  var hashCode = 0;
  for (var i = 0; i < key.length; i++) {
    hashCode += key.charCodeAt(i);
  }
  return hashCode % storage;
};

let HashTable = function (){

  let storage = [];
  let storageLimit = 31;

  this.set = function(inventory){

    let key = (inventory.item)
    let index = hash(key, storageLimit);
    if(storage[index] === undefined){
      storage[index] = inventory;
    } else {
      while(storage[index] !== undefined){
        index++;
      }
      storage[index] = inventory;
    }
  };

  this.get = function(inventoryObj){
    let index = hash(inventoryObj, storageLimit);
    return storage[index];
  };

};

let ht = new HashTable();

var InventoryShirts = {
  item: 'T-shirt',
  quantity: '10'
};
var InventoryPants = {
 item: 'Jeans',
  quantity: '8'
};


ht.set(InventoryShirts);
ht.set(InventoryPants);



ht.set(InventoryShirts);
ht.set(InventoryPants);
console.log(ht.get('10'));
console.log(ht.get('Jeans'));


_____________________________________________________________________________________________________





var hash = (key, storage) => {
  var hashCode = 0;
  for (var i = 0; i < key.length; i++) {
    hashCode += key.charCodeAt(i);
  }
  return hashCode % storage;
};


let HashTable = function (){

  let storage = [];
  let storageLimit = 31;


  this.set = function(newspaper){

    let key = (newspaper.publisher + ', ' + newspaper.date)
    let index = hash(key, storageLimit);
    if(storage[index] === undefined){
      storage[index] = newspaper;
    } else {
      while(storage[index] !== undefined){
        index++;
      }
      storage[index] = newspaper;
    }
  };

  this.get = function(newspaperObj){
    let index = hash(newspaperObj, storageLimit);
    return storage[index];
  };

};


let ht = new HashTable();

var NewsPaperA = {
  publisher: 'We Publish',
  date: '01-30-2008',
  paper: 'Lorem ipsum dolor sit ametm.'
};
var NewsPaperB = {
  publisher: 'We Publish too',
  date: '02-03-2008',
  paper: 'Lorem ipsum dolor sit amet.'
};


ht.set(NewsPaperA);
ht.set(NewsPaperB);



console.log(ht.get('We Publish, 01-30-2008'));
console.log(ht.get('We Publish too, 02-03-2008'));
